{"version":3,"sources":["actions/authedUser.js","utils/_DATA.js","utils/api.js","actions/questions.js","reducers/index.js","reducers/authedUser.js","reducers/users.js","actions/users.js","reducers/questions.js","middleware/index.js","middleware/logger.js","actions/index.js","components/Nav.js","components/Question.js","components/Dashboard.js","components/Leaderboard.js","components/NewQuestion.js","components/QuestionPage.js","components/Login.js","components/NotFound.js","utils/ProtectedRoute.js","components/App.js","serviceWorker.js","index.js"],"names":["setAuthedUser","id","type","users","sarahedo","name","avatarURL","answers","questions","tylermcginnis","johndoe","author","timestamp","optionOne","votes","text","optionTwo","_saveQuestion","question","Promise","res","rej","authedUser","formattedQuestion","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","formatQuestion","setTimeout","concat","saveQuestionAnswer","info","qid","answer","_saveQuestionAnswer","RECEIVE_QUESTIONS","ADD_QUESTION","ANSWER_QUESTION","receiveQuestions","addQuestion","handleAddQuestion","dispatch","getState","then","answerQuestion","handleAnswerQuestion","combineReducers","state","action","applyMiddleware","thunk","store","next","console","group","log","result","groupEnd","handleInitialData","all","receiveUsers","connect","pure","props","loggedIn","className","to","exact","activeClassName","src","alt","Question","option","handleOptionClicked","this","setState","page","answered","Object","keys","indexOf","optionOneVotes","length","optionTwoVotes","totalVotes","percentOptionOneVotes","toFixed","percentOptionTwoVotes","value","checked","onChange","handleOptionChange","label","disabled","onClick","Component","actions","Dashboard","handleFilter","sortedQuestionArray","map","key","filter","contains","sort","a","b","sortedUserArray","u","one","two","totalOne","user","NewQuestion","home","handleChange","e","optionIndex","target","previousState","handleSubmit","preventDefault","onSubmit","placeholder","match","params","from","Login","userId","handleSelection","handleLogin","history","selectedUser","redirect","location","push","withRouter","NotFound","component","rest","pathname","render","App","path","Leaderboard","QuestionPage","Boolean","window","hostname","createStore","reducer","middleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8c17d015.chunk.js","sourcesContent":["export const SET_AUTHED_USER = 'SET_AUTHED_USER'\r\nexport const CLEAR_AUTHED_USER = 'CLEAR_AUTHED_USER'\r\n\r\nexport function setAuthedUser(id) {\r\n  return {\r\n    type: SET_AUTHED_USER,\r\n    id,\r\n  }\r\n}\r\n\r\nexport function clearAuthedUser() {\r\n  return {\r\n    type: CLEAR_AUTHED_USER,\r\n  }\r\n}","let users = {\n  sarahedo: {\n    id: 'sarahedo',\n    name: 'Sarah Edo',\n    avatarURL: 'sarahedo.png',\n    answers: {\n      \"8xf0y6ziyjabvozdd253nd\": 'optionOne',\n      \"6ni6ok3ym7mf1p33lnez\": 'optionTwo',\n      \"am8ehyc8byjqgar0jgpub9\": 'optionTwo',\n      \"loxhs1bqm25b708cmbf3g\": 'optionTwo'\n    },\n    questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9']\n  },\n  tylermcginnis: {\n    id: 'tylermcginnis',\n    name: 'Tyler McGinnis',\n    avatarURL: 'tylermcginnis.png',\n    answers: {\n      \"vthrdm985a262al8qx3do\": 'optionOne',\n      \"xj352vofupe1dqz9emx13r\": 'optionTwo',\n    },\n    questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do'],\n  },\n  johndoe: {\n    id: 'johndoe',\n    name: 'John Doe',\n    avatarURL: 'johndoe.png',\n    answers: {\n      \"xj352vofupe1dqz9emx13r\": 'optionOne',\n      \"vthrdm985a262al8qx3do\": 'optionTwo',\n      \"6ni6ok3ym7mf1p33lnez\": 'optionTwo'\n    },\n    questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r'],\n  }\n}\n\nlet questions = {\n  \"8xf0y6ziyjabvozdd253nd\": {\n    id: '8xf0y6ziyjabvozdd253nd',\n    author: 'sarahedo',\n    timestamp: 1467166872634,\n    optionOne: {\n      votes: ['sarahedo'],\n      text: 'have horrible short term memory',\n    },\n    optionTwo: {\n      votes: [],\n      text: 'have horrible long term memory'\n    }\n  },\n  \"6ni6ok3ym7mf1p33lnez\": {\n    id: '6ni6ok3ym7mf1p33lnez',\n    author: 'johndoe',\n    timestamp: 1468479767190,\n    optionOne: {\n      votes: [],\n      text: 'become a superhero',\n    },\n    optionTwo: {\n      votes: ['johndoe', 'sarahedo'],\n      text: 'become a supervillain'\n    }\n  },\n  \"am8ehyc8byjqgar0jgpub9\": {\n    id: 'am8ehyc8byjqgar0jgpub9',\n    author: 'sarahedo',\n    timestamp: 1488579767190,\n    optionOne: {\n      votes: [],\n      text: 'be telekinetic',\n    },\n    optionTwo: {\n      votes: ['sarahedo'],\n      text: 'be telepathic'\n    }\n  },\n  \"loxhs1bqm25b708cmbf3g\": {\n    id: 'loxhs1bqm25b708cmbf3g',\n    author: 'tylermcginnis',\n    timestamp: 1482579767190,\n    optionOne: {\n      votes: [],\n      text: 'be a front-end developer',\n    },\n    optionTwo: {\n      votes: ['sarahedo'],\n      text: 'be a back-end developer'\n    }\n  },\n  \"vthrdm985a262al8qx3do\": {\n    id: 'vthrdm985a262al8qx3do',\n    author: 'tylermcginnis',\n    timestamp: 1489579767190,\n    optionOne: {\n      votes: ['tylermcginnis'],\n      text: 'find $50 yourself',\n    },\n    optionTwo: {\n      votes: ['johndoe'],\n      text: 'have your best friend find $500'\n    }\n  },\n  \"xj352vofupe1dqz9emx13r\": {\n    id: 'xj352vofupe1dqz9emx13r',\n    author: 'johndoe',\n    timestamp: 1493579767190,\n    optionOne: {\n      votes: ['johndoe'],\n      text: 'write JavaScript',\n    },\n    optionTwo: {\n      votes: ['tylermcginnis'],\n      text: 'write Swift'\n    }\n  },\n}\n\nfunction generateUID () {\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\n}\n\nexport function _getUsers () {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({...users}), 1000)\n  })\n}\n\nexport function _getQuestions () {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({...questions}), 1000)\n  })\n}\n\nfunction formatQuestion ({ optionOneText, optionTwoText, author }) {\n  return {\n    id: generateUID(),\n    timestamp: Date.now(),\n    author,\n    optionOne: {\n      votes: [],\n      text: optionOneText,\n    },\n    optionTwo: {\n      votes: [],\n      text: optionTwoText,\n    }\n  }\n}\n\nexport function _saveQuestion (question) {\n  return new Promise((res, rej) => {\n    const authedUser = question.author;\n    const formattedQuestion = formatQuestion(question);\n\n    setTimeout(() => {\n      questions = {\n        ...questions,\n        [formattedQuestion.id]: formattedQuestion\n      }\n      \n      users = {\n        ...users,\n        [authedUser]: {\n          ...users[authedUser],\n          questions: users[authedUser].questions.concat([formattedQuestion.id])\n        }\n      }\n\n      res(formattedQuestion)\n    }, 1000)\n  })\n}\n\nexport function _saveQuestionAnswer ({ authedUser, qid, answer }) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      users = {\n        ...users,\n        [authedUser]: {\n          ...users[authedUser],\n          answers: {\n            ...users[authedUser].answers,\n            [qid]: answer\n          }\n        }\n      }\n\n      questions = {\n        ...questions,\n        [qid]: {\n          ...questions[qid],\n          [answer]: {\n            ...questions[qid][answer],\n            votes: questions[qid][answer].votes.concat([authedUser])\n          }\n        }\n      }\n\n      res()\n    }, 500)\n  })\n}\n","import {\r\n    _getUsers,\r\n    _getQuestions,\r\n    _saveQuestion,\r\n    _saveQuestionAnswer\r\n  } from './_DATA.js';\r\n  \r\nexport function getInitialData() {\r\n  return Promise.all([\r\n    _getUsers(),\r\n    _getQuestions(),\r\n  ]).then(function ([users, questions]) {\r\n    return {\r\n      users,\r\n      questions,\r\n    };\r\n  });\r\n};\r\n\r\nexport function saveQuestion(info) {\r\n  return _saveQuestion(info);\r\n};\r\n\r\nexport function saveQuestionAnswer(info) {\r\n  return _saveQuestionAnswer(info);\r\n}","import { saveQuestion, saveQuestionAnswer } from '../utils/api'\r\n\r\nexport const RECEIVE_QUESTIONS = 'RECEIVE_QUESTIONS'\r\nexport const ADD_QUESTION = 'ADD_QUESTION'\r\nexport const ANSWER_QUESTION = 'ANSWER_QUESTION'\r\n\r\nexport function receiveQuestions(questions) {\r\n  return {\r\n    type: RECEIVE_QUESTIONS,\r\n    questions,\r\n  }\r\n}\r\n\r\nexport function addQuestion(question) {\r\n  return {\r\n    type: ADD_QUESTION,\r\n    question,\r\n  }\r\n}\r\n\r\nexport function handleAddQuestion(optionOneText, optionTwoText) {\r\n  return function (dispatch, getState) {\r\n    const { authedUser } = getState();\r\n\r\n    const questionInfo = {\r\n      optionOneText,\r\n      optionTwoText,\r\n      author: authedUser,\r\n    };\r\n\r\n    return saveQuestion(questionInfo)\r\n      .then(function (question) { dispatch(addQuestion(question)) })\r\n  }\r\n}\r\n\r\n\r\nexport function answerQuestion(authedUser, qid, answer) {\r\n  return {\r\n    type: ANSWER_QUESTION,\r\n    authedUser,\r\n    qid,\r\n    answer,\r\n  }\r\n}\r\n\r\nexport function handleAnswerQuestion(question, answer) {\r\n  return function (dispatch, getState) {\r\n    const { authedUser } = getState();\r\n\r\n    const answerInfo = {\r\n      authedUser,\r\n      qid: question.id,\r\n      answer,\r\n    };\r\n\r\n    return saveQuestionAnswer(answerInfo)\r\n      .then(function () { dispatch((answerQuestion(authedUser, question, answer))) })\r\n  }\r\n}","import { combineReducers } from 'redux'\r\nimport authedUser from './authedUser'\r\nimport users from './users'\r\nimport questions from './questions'\r\n\r\nexport default combineReducers({\r\n  authedUser,\r\n  users,\r\n  questions,\r\n})","import { SET_AUTHED_USER, CLEAR_AUTHED_USER } from '../actions/authedUser'\r\n\r\nexport default function authedUser(state = null, action) {\r\n  switch (action.type) {\r\n    case SET_AUTHED_USER:\r\n      return action.id\r\n    case CLEAR_AUTHED_USER:\r\n      return null\r\n    default:\r\n      return state\r\n  }\r\n}","import { RECEIVE_USERS } from '../actions/users'\r\nimport { ADD_QUESTION, ANSWER_QUESTION } from '../actions/questions'\r\n\r\nexport default function users(state = {}, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_USERS:\r\n      return {\r\n        ...state,\r\n        ...action.users\r\n      }\r\n    case ADD_QUESTION:\r\n      return {\r\n        ...state,\r\n        [action.question.author]: {\r\n          ...state[action.question.author],\r\n          questions: state[action.question.author].questions.concat(action.question.id),\r\n        }\r\n      }\r\n    case ANSWER_QUESTION:\r\n      return {\r\n        ...state,\r\n        [action.authedUser]: {\r\n          ...state[action.authedUser],\r\n          answers: {\r\n            ...state[action.authedUser].answers,\r\n            [action.qid]: action.answer,\r\n          },\r\n        },\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","export const RECEIVE_USERS = 'RECEIVE_USERS'\r\n\r\nexport function receiveUsers(users) {\r\n  return {\r\n    type: RECEIVE_USERS,\r\n    users,\r\n  }\r\n}","import { ADD_QUESTION, RECEIVE_QUESTIONS, ANSWER_QUESTION } from '../actions/questions'\r\n\r\nexport default function questions(state = {}, action) {\r\n  switch (action.type) {\r\n    case ADD_QUESTION:\r\n      const { question } = action;\r\n      return {\r\n        ...state,\r\n        [question.id]: question,\r\n      }\r\n    case RECEIVE_QUESTIONS:\r\n      return {\r\n        ...state,\r\n        ...action.questions,\r\n      }\r\n    case ANSWER_QUESTION:\r\n      return {\r\n        ...state,\r\n        [action.qid]: {\r\n          ...state[action.qid],\r\n          [action.answer]: {\r\n            ...state[action.qid][action.answer],\r\n            votes: state[action.qid][action.answer].votes.concat(action.authedUser),\r\n          },\r\n        },\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import thunk from 'redux-thunk'\r\nimport { applyMiddleware } from 'redux'\r\nimport logger from './logger'\r\n\r\nexport default applyMiddleware(\r\n  thunk,\r\n  logger,\r\n)","export default function logger(store) {\r\n    return function(next) {\r\n      return function(action) {\r\n        console.group(action.type);\r\n        console.log('The action: ', action);\r\n        const result = next(action);\r\n        console.log('The new state is: ', store.getState());\r\n        console.groupEnd();\r\n        return result;\r\n      };\r\n    };\r\n  }","import { getInitialData } from '../utils/api'\r\nimport { receiveUsers } from './users'\r\nimport { receiveQuestions } from './questions'\r\n\r\nexport function handleInitialData() {\r\n  return (dispatch) => {\r\n    return getInitialData()\r\n      .then(({ users, questions }) => {\r\n        dispatch(receiveUsers(users))\r\n        dispatch(receiveQuestions(questions))\r\n      })\r\n  }\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nfunction Nav(props) {\r\n  const { authedUser, users } = props\r\n  const avatarURL = authedUser ? users[authedUser].avatarURL : 'avatar.png';\r\n  const loggedIn = authedUser !== null\r\n\r\n  return (\r\n    <nav className='nav'>\r\n      <ul>\r\n        <li>\r\n          <NavLink to='/' exact activeClassName='nav-active'>Home</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to='/leaderboard' exact activeClassName='nav-active'>Leaderboard</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to='/add' exact activeClassName='nav-active'>New Question</NavLink>\r\n        </li>\r\n        {loggedIn ?\r\n          <li>\r\n             <div className='nav-user'> \r\n                <img className='nav-avatar' src={avatarURL} alt={`Avatar of ${authedUser}`} />\r\n                <div className=\"nav-username\">\r\n                  <span>{authedUser}</span>\r\n                  <NavLink to='/login' exact className='nav-logout'>Logout</NavLink>\r\n                </div>\r\n              </div> \r\n          </li> \r\n        :\r\n          <li>\r\n            <NavLink to='/login' exact activeClassName='nav-active'>Login</NavLink>\r\n          </li>\r\n        }\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps({ authedUser, users }) {\r\n  return {\r\n    authedUser,\r\n    users,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null, null, { pure: false })(Nav)","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../actions/questions'\r\n\r\nclass Question extends Component {\r\n  state = {\r\n    option: '',\r\n  }\r\n\r\n  handleOptionChange(option) {\r\n    this.setState(() => ({ option }))\r\n  }\r\n\r\n  handleOptionClicked = () => {\r\n    const { answerQuestion, authedUser, question } = this.props;\r\n    answerQuestion(authedUser, question.id, this.state.option);\r\n  }\r\n\r\n  render() {\r\n    const { authedUser, question, users, page } = this.props;\r\n    const answers = Object.keys(users[authedUser].answers);\r\n    const answered = answers.indexOf(question.id) > -1 ? true : false;\r\n    const optionOneVotes = question.optionOne.votes.length;\r\n    const optionTwoVotes = question.optionTwo.votes.length;\r\n    const totalVotes = optionOneVotes + optionTwoVotes;\r\n    const percentOptionOneVotes = (optionOneVotes / totalVotes).toFixed(2) * 100;\r\n    const percentOptionTwoVotes = (optionTwoVotes / totalVotes).toFixed(2) * 100;\r\n\r\n    return (\r\n\r\n      <div className='question'>\r\n        <div className='question-head'>\r\n          <img\r\n            src={`${users[question.author].avatarURL}`}\r\n            alt={`Avatar of ${question.author}`}\r\n            className='question-avatar'\r\n          />\r\n          <div className='question-title'>\r\n            <div className='question-author'><span>{question.author}</span> asks</div>\r\n            <span className='question-subtitle'>Would You Rather...</span>\r\n          </div>\r\n        </div>\r\n\r\n        {page ?\r\n\r\n          <div className='question-page'>\r\n            {answered ?\r\n              <div className='question-stat'>\r\n                <div className={question.optionOne.votes.indexOf(authedUser) > -1 ?\r\n                  'question-option-selected' : 'question-option-notselected'}>\r\n                  <div>\r\n                    {question.optionOne.text}\r\n                  </div>\r\n                  <span>\r\n                    Votes: {question.optionOne.votes.length} ({percentOptionOneVotes}%)\r\n                  </span>\r\n                </div>\r\n                <div className={question.optionTwo.votes.indexOf(authedUser) > -1 ?\r\n                  'question-option-selected' : 'question-option-notselected'}>\r\n                  <div>\r\n                    {question.optionTwo.text}\r\n                  </div>\r\n                  <span>\r\n                    Votes: {question.optionTwo.votes.length} ({percentOptionTwoVotes}%)\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            :\r\n              <div className='question-options'>\r\n                <form>\r\n                  <div className='question-option'>\r\n                    <label>\r\n                      <input type='radio' value='optionOne'\r\n                        checked={this.state.option === 'optionOne'}\r\n                        onChange={() => this.handleOptionChange('optionOne')} />\r\n                      {question.optionOne.text}\r\n                    </label>\r\n                  </div>\r\n                  <div className='question-option'>\r\n                    <label>\r\n                      <input type='radio' value='optionTwo'\r\n                        label={question.optionTwo.text}\r\n                        checked={this.state.option === 'optionTwo'}\r\n                        onChange={() => this.handleOptionChange('optionTwo')} />\r\n                      {question.optionTwo.text}\r\n                    </label>\r\n                  </div>\r\n                </form>\r\n                <button className='question-submit' disabled={this.state.option === ''} onClick={this.handleOptionClicked}>Submit</button>\r\n              </div>\r\n            }\r\n          </div>\r\n          :\r\n          <div className='question-body'>\r\n            <span>{question.optionOne.text}</span>\r\n            <span>or...</span>\r\n            <div className='question-poll'>\r\n              <button><Link to={`/questions/${question.id}`}>View Poll</Link></button>\r\n            </div>\r\n          </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ authedUser, users }) {\r\n  return {\r\n    authedUser,\r\n    users,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, actions)(Question);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Question from './Question'\r\n\r\nclass Dashboard extends Component {\r\n  state = {\r\n    answered: false,\r\n  }\r\n\r\n  handleFilter = function(answered) {\r\n    this.setState(function() {\r\n      return {\r\n        answered: answered\r\n      };\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { answered } = this.state;\r\n    const { authedUser, questions } = this.props;\r\n    const questionArray = Object.keys(questions).map((key) => questions[key]);\r\n    const filteredQuestionArray = questionArray.filter(function(question) {\r\n      const contains = (\r\n        question.optionOne.votes.indexOf(authedUser) > -1 ||\r\n        question.optionTwo.votes.indexOf(authedUser) > -1\r\n      );\r\n      return answered ? contains : !contains;\r\n    });\r\n    const sortedQuestionArray = filteredQuestionArray.sort((a, b) => b.timestamp - a.timestamp);\r\n\r\n    return (\r\n      <div>\r\n        <div className='dashboard-button-group'>\r\n          <button\r\n            className={!answered ? 'button-left active' : 'button-left'}\r\n            onClick={() => this.handleFilter(false)}>\r\n            Unanswered\r\n          </button>\r\n          <button\r\n            className={answered ? 'button-right active' : 'button-right'}\r\n            onClick={() => this.handleFilter(true)}>\r\n            Answered\r\n          </button>\r\n        </div>\r\n        <ul className='question-list'>\r\n          {sortedQuestionArray.map((question) => (\r\n            <li key={question.id}>\r\n              <Question question={question} />\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ authedUser, questions, users }) {\r\n  return {\r\n    authedUser,\r\n    questions,\r\n    users,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Dashboard)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nfunction Leaderboard(props) {\r\n  const { users } = props;\r\n  const userArray = Object.keys(users).map((u) => users[u]);\r\n  const sortedUserArray = userArray.sort((one, two) => {\r\n    const totalOne = Object.keys(one.answers).length + one.questions.length;\r\n    const totalTwo = Object.keys(two.answers).length + two.questions.length;\r\n    return totalTwo - totalOne;\r\n  })\r\n\r\n  return (\r\n    <div className='leaderboard'>\r\n      <ul className='leaderboard-list'>\r\n        {sortedUserArray.map((user) => (\r\n          <li key={user.id}>\r\n            <div className='leaderboard-user'>\r\n              <img\r\n                src={user.avatarURL}\r\n                alt={`Avatar of ${user.name}`}\r\n                className='leaderboard-avatar'\r\n              />\r\n              <div className='leaderboard-user-stats'>\r\n                <span className='leaderboard-user-name'>{user.name}</span>\r\n                <span>Asked: {Object.keys(user.questions).length}</span>\r\n                <span>Answered: {Object.keys(user.answers).length}</span>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps({ users }) {\r\n  return {\r\n    users,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Leaderboard)","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { handleAddQuestion } from '../actions/questions'\r\n\r\nclass NewQuestion extends Component {\r\n  state = {\r\n    optionOne: '',\r\n    optionTwo: '',\r\n    home: false,\r\n  }\r\n\r\n  handleChange = function(e, optionIndex) {\r\n    const option = e.target.value;\r\n    this.setState(function(previousState) {\r\n      return optionIndex === 1\r\n        ? { ...previousState, 'optionOne': option }\r\n        : { ...previousState, 'optionTwo': option };\r\n    });\r\n  }\r\n\r\n  handleSubmit = function(e) {\r\n    e.preventDefault();\r\n    const { optionOne, optionTwo } = this.state;\r\n    const { dispatch } = this.props;\r\n    dispatch(handleAddQuestion(optionOne, optionTwo));\r\n\r\n    this.setState(function(previousState) {\r\n      return {\r\n        ...previousState,\r\n        home: true,\r\n      };\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { optionOne, optionTwo, home } = this.state;\r\n\r\n    if (home === true) {\r\n      return <Redirect to='/' />\r\n    }\r\n\r\n    return (\r\n      <div className='newquestion'>\r\n        <span className='newquestion-title'>Create New Question</span>\r\n        <span className='newquestion-subtitle'>Would You Rather...</span>\r\n        <form onSubmit={(e) => this.handleSubmit(e)}>\r\n          <div className='newquestion-option'>\r\n            <textarea\r\n              placeholder='Type first option'\r\n              value={optionOne}\r\n              onChange={(e) => this.handleChange(e, 1)} />\r\n          </div>\r\n          <span>or</span>\r\n          <div className='newquestion-option'>\r\n            <textarea\r\n              placeholder='Type second option'\r\n              value={optionTwo}\r\n              onChange={(e) => this.handleChange(e, 2)} />\r\n          </div>\r\n          <button\r\n            className='newquestion-submit'\r\n            type='submit'\r\n            disabled={optionOne === '' || optionTwo === ''}>\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ authedUser, users }) {\r\n  return {\r\n    authedUser,\r\n    users,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(NewQuestion)","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport Question from './Question'\r\n\r\nfunction QuestionPage (props) {\r\n  const { id, questions } = props;\r\n  const question = questions[id];\r\n\r\n  if(question == null) {\r\n    return <Redirect from='*' to='/not-found' />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {question &&\r\n        <Question question={question} page='page'/>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps({ authedUser, questions }, props) {\r\n  const { id } = props.match.params;\r\n  return {\r\n    id,\r\n    questions,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(QuestionPage);","import React, { Component } from 'react'\r\nimport { Redirect, withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { setAuthedUser, clearAuthedUser } from '../actions/authedUser'\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    userId: null,\r\n    home: false,\r\n  }\r\n\r\n  handleSelection = function(e) {\r\n    const userId = e.target.value;\r\n    this.setState(function(previousState) {\r\n      return {\r\n        ...previousState,\r\n        userId,\r\n      };\r\n    });\r\n  }\r\n\r\n  handleLogin = function(e) {\r\n    this.props.dispatch(setAuthedUser(this.state.userId));\r\n    this.setState(function(previousState) {\r\n      return {\r\n        ...previousState,\r\n        home: true,\r\n      };\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(clearAuthedUser())\r\n  }\r\n\r\n  render() {\r\n    const { userId, home } = this.state;\r\n    const { history, users } = this.props;\r\n    const selectedUser = userId ? userId : -1;\r\n    const avatarURL = userId ? users[userId].avatarURL : 'avatar.png';\r\n\r\n    if(home) {\r\n      const redirect = history.location.state;\r\n      if (redirect != null) {\r\n        return <Redirect to={redirect} push={true} />\r\n      }\r\n      return <Redirect to='/' />\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className='login'>\r\n          <img className='login-avatar' src={avatarURL} alt={`Avatar of ${userId}`} />\r\n          <div className='login-select'>\r\n            <select value={selectedUser} onChange={(e) => this.handleSelection(e)}>\r\n              <option value={-1} disabled>Select user...</option>\r\n              {Object.keys(users).map(function (key) {\r\n                return (\r\n                  <option value={users[key].id} key={key}>{users[key].id}</option>\r\n                );\r\n              })}\r\n            </select>\r\n          </div>\r\n          <button\r\n            className='login-button'\r\n            disabled={userId === null}\r\n            onClick={(e) => this.handleLogin(e)}>\r\n            Login\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ users }) {\r\n  return {\r\n    users,\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(Login))","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass NotFound extends Component {\r\n  render() {\r\n    return (\r\n      <div className='notfound'>\r\n        <h1 className='notfound-title'> \r\n          <span className='notfound-404'>404</span> \r\n          <span>Page not found</span> \r\n        </h1>\r\n        <h2 className='notfound-subtitle'>The page you're looking for doesn't exist.</h2>\r\n        <Link className='notfound-link'to='/'>Go to Home</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ users }) {\r\n  return {\r\n    users,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(NotFound)","import React from 'react'\r\nimport { Route, Redirect, withRouter } from 'react-router-dom'\r\n\r\nfunction ProtectedRoute({ component: Component, ...rest }) {\r\n  const redirect = rest.location.pathname;\r\n\r\n  return (\r\n    <Route {...rest} render={function(props) {\r\n      return (\r\n        rest.loggedIn\r\n        ? <Component {...props} />\r\n        : <Redirect to={{\r\n            pathname: '/login',\r\n            state: redirect\r\n          }} />\r\n      )}\r\n    } />\r\n  );\r\n}\r\n\r\nexport default withRouter(ProtectedRoute);","import React, { Component, Fragment } from 'react'\nimport { HashRouter, Switch, Route } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { handleInitialData } from '../actions'\nimport Nav from './Nav'\nimport Dashboard from './Dashboard'\nimport Leaderboard from './Leaderboard'\nimport NewQuestion from './NewQuestion'\nimport QuestionPage from './QuestionPage'\nimport Login from './Login'\nimport NotFound from './NotFound'\nimport ProtectedRoute from '../utils/ProtectedRoute'\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.dispatch(handleInitialData())\n  }\n\n  render() {\n    const { loggedIn } = this.props;\n\n    return (\n      <HashRouter>\n        <Fragment>\n          <div className='container'>\n            <Nav />\n              <div>\n                <Switch>\n                  <ProtectedRoute path='/' exact component={Dashboard} loggedIn={loggedIn} />\n                  <ProtectedRoute path='/leaderboard' exact component={Leaderboard} loggedIn={loggedIn} />\n                  <ProtectedRoute path='/add' exact component={NewQuestion} loggedIn={loggedIn} />\n                  <ProtectedRoute path='/questions/:id' exact component={QuestionPage} loggedIn={loggedIn} />\n                  <Route path='/login' exact component={Login} />\n                  <Route component={NotFound} />\n                </Switch>\n              </div>\n          </div>\n        </Fragment>\n      </HashRouter>\n    );\n  }\n}\n\nfunction mapStateToProps({ authedUser }) {\n  return {\n    loggedIn: authedUser !== null,\n  }\n}\n\nexport default connect(mapStateToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport reducer from './reducers'\nimport middleware from './middleware'\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\nimport './index.css'\n\nconst store = createStore(reducer, middleware);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}